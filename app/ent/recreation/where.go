// Code generated by ent, DO NOT EDIT.

package recreation

import (
	"app/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldUserID, v))
}

// RecreationID applies equality check predicate on the "recreation_id" field. It's identical to RecreationIDEQ.
func RecreationID(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldRecreationID, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldTitle, v))
}

// Content applies equality check predicate on the "content" field. It's identical to ContentEQ.
func Content(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldContent, v))
}

// YoutubeID applies equality check predicate on the "youtube_id" field. It's identical to YoutubeIDEQ.
func YoutubeID(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldYoutubeID, v))
}

// TargetNumber applies equality check predicate on the "target_number" field. It's identical to TargetNumberEQ.
func TargetNumber(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldTargetNumber, v))
}

// RequiredTime applies equality check predicate on the "required_time" field. It's identical to RequiredTimeEQ.
func RequiredTime(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldRequiredTime, v))
}

// Publish applies equality check predicate on the "publish" field. It's identical to PublishEQ.
func Publish(v bool) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldPublish, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldUpdatedAt, v))
}

// PublishedAt applies equality check predicate on the "published_at" field. It's identical to PublishedAtEQ.
func PublishedAt(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldPublishedAt, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldUserID, v))
}

// RecreationIDEQ applies the EQ predicate on the "recreation_id" field.
func RecreationIDEQ(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldRecreationID, v))
}

// RecreationIDNEQ applies the NEQ predicate on the "recreation_id" field.
func RecreationIDNEQ(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldRecreationID, v))
}

// RecreationIDIn applies the In predicate on the "recreation_id" field.
func RecreationIDIn(vs ...uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldRecreationID, vs...))
}

// RecreationIDNotIn applies the NotIn predicate on the "recreation_id" field.
func RecreationIDNotIn(vs ...uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldRecreationID, vs...))
}

// RecreationIDGT applies the GT predicate on the "recreation_id" field.
func RecreationIDGT(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldRecreationID, v))
}

// RecreationIDGTE applies the GTE predicate on the "recreation_id" field.
func RecreationIDGTE(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldRecreationID, v))
}

// RecreationIDLT applies the LT predicate on the "recreation_id" field.
func RecreationIDLT(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldRecreationID, v))
}

// RecreationIDLTE applies the LTE predicate on the "recreation_id" field.
func RecreationIDLTE(v uuid.UUID) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldRecreationID, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldContainsFold(FieldTitle, v))
}

// ContentEQ applies the EQ predicate on the "content" field.
func ContentEQ(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldContent, v))
}

// ContentNEQ applies the NEQ predicate on the "content" field.
func ContentNEQ(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldContent, v))
}

// ContentIn applies the In predicate on the "content" field.
func ContentIn(vs ...string) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldContent, vs...))
}

// ContentNotIn applies the NotIn predicate on the "content" field.
func ContentNotIn(vs ...string) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldContent, vs...))
}

// ContentGT applies the GT predicate on the "content" field.
func ContentGT(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldContent, v))
}

// ContentGTE applies the GTE predicate on the "content" field.
func ContentGTE(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldContent, v))
}

// ContentLT applies the LT predicate on the "content" field.
func ContentLT(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldContent, v))
}

// ContentLTE applies the LTE predicate on the "content" field.
func ContentLTE(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldContent, v))
}

// ContentContains applies the Contains predicate on the "content" field.
func ContentContains(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldContains(FieldContent, v))
}

// ContentHasPrefix applies the HasPrefix predicate on the "content" field.
func ContentHasPrefix(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldHasPrefix(FieldContent, v))
}

// ContentHasSuffix applies the HasSuffix predicate on the "content" field.
func ContentHasSuffix(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldHasSuffix(FieldContent, v))
}

// ContentEqualFold applies the EqualFold predicate on the "content" field.
func ContentEqualFold(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEqualFold(FieldContent, v))
}

// ContentContainsFold applies the ContainsFold predicate on the "content" field.
func ContentContainsFold(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldContainsFold(FieldContent, v))
}

// YoutubeIDEQ applies the EQ predicate on the "youtube_id" field.
func YoutubeIDEQ(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldYoutubeID, v))
}

// YoutubeIDNEQ applies the NEQ predicate on the "youtube_id" field.
func YoutubeIDNEQ(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldYoutubeID, v))
}

// YoutubeIDIn applies the In predicate on the "youtube_id" field.
func YoutubeIDIn(vs ...string) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldYoutubeID, vs...))
}

// YoutubeIDNotIn applies the NotIn predicate on the "youtube_id" field.
func YoutubeIDNotIn(vs ...string) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldYoutubeID, vs...))
}

// YoutubeIDGT applies the GT predicate on the "youtube_id" field.
func YoutubeIDGT(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldYoutubeID, v))
}

// YoutubeIDGTE applies the GTE predicate on the "youtube_id" field.
func YoutubeIDGTE(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldYoutubeID, v))
}

// YoutubeIDLT applies the LT predicate on the "youtube_id" field.
func YoutubeIDLT(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldYoutubeID, v))
}

// YoutubeIDLTE applies the LTE predicate on the "youtube_id" field.
func YoutubeIDLTE(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldYoutubeID, v))
}

// YoutubeIDContains applies the Contains predicate on the "youtube_id" field.
func YoutubeIDContains(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldContains(FieldYoutubeID, v))
}

// YoutubeIDHasPrefix applies the HasPrefix predicate on the "youtube_id" field.
func YoutubeIDHasPrefix(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldHasPrefix(FieldYoutubeID, v))
}

// YoutubeIDHasSuffix applies the HasSuffix predicate on the "youtube_id" field.
func YoutubeIDHasSuffix(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldHasSuffix(FieldYoutubeID, v))
}

// YoutubeIDIsNil applies the IsNil predicate on the "youtube_id" field.
func YoutubeIDIsNil() predicate.Recreation {
	return predicate.Recreation(sql.FieldIsNull(FieldYoutubeID))
}

// YoutubeIDNotNil applies the NotNil predicate on the "youtube_id" field.
func YoutubeIDNotNil() predicate.Recreation {
	return predicate.Recreation(sql.FieldNotNull(FieldYoutubeID))
}

// YoutubeIDEqualFold applies the EqualFold predicate on the "youtube_id" field.
func YoutubeIDEqualFold(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldEqualFold(FieldYoutubeID, v))
}

// YoutubeIDContainsFold applies the ContainsFold predicate on the "youtube_id" field.
func YoutubeIDContainsFold(v string) predicate.Recreation {
	return predicate.Recreation(sql.FieldContainsFold(FieldYoutubeID, v))
}

// TargetNumberEQ applies the EQ predicate on the "target_number" field.
func TargetNumberEQ(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldTargetNumber, v))
}

// TargetNumberNEQ applies the NEQ predicate on the "target_number" field.
func TargetNumberNEQ(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldTargetNumber, v))
}

// TargetNumberIn applies the In predicate on the "target_number" field.
func TargetNumberIn(vs ...int) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldTargetNumber, vs...))
}

// TargetNumberNotIn applies the NotIn predicate on the "target_number" field.
func TargetNumberNotIn(vs ...int) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldTargetNumber, vs...))
}

// TargetNumberGT applies the GT predicate on the "target_number" field.
func TargetNumberGT(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldTargetNumber, v))
}

// TargetNumberGTE applies the GTE predicate on the "target_number" field.
func TargetNumberGTE(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldTargetNumber, v))
}

// TargetNumberLT applies the LT predicate on the "target_number" field.
func TargetNumberLT(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldTargetNumber, v))
}

// TargetNumberLTE applies the LTE predicate on the "target_number" field.
func TargetNumberLTE(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldTargetNumber, v))
}

// RequiredTimeEQ applies the EQ predicate on the "required_time" field.
func RequiredTimeEQ(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldRequiredTime, v))
}

// RequiredTimeNEQ applies the NEQ predicate on the "required_time" field.
func RequiredTimeNEQ(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldRequiredTime, v))
}

// RequiredTimeIn applies the In predicate on the "required_time" field.
func RequiredTimeIn(vs ...int) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldRequiredTime, vs...))
}

// RequiredTimeNotIn applies the NotIn predicate on the "required_time" field.
func RequiredTimeNotIn(vs ...int) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldRequiredTime, vs...))
}

// RequiredTimeGT applies the GT predicate on the "required_time" field.
func RequiredTimeGT(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldRequiredTime, v))
}

// RequiredTimeGTE applies the GTE predicate on the "required_time" field.
func RequiredTimeGTE(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldRequiredTime, v))
}

// RequiredTimeLT applies the LT predicate on the "required_time" field.
func RequiredTimeLT(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldRequiredTime, v))
}

// RequiredTimeLTE applies the LTE predicate on the "required_time" field.
func RequiredTimeLTE(v int) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldRequiredTime, v))
}

// PublishEQ applies the EQ predicate on the "publish" field.
func PublishEQ(v bool) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldPublish, v))
}

// PublishNEQ applies the NEQ predicate on the "publish" field.
func PublishNEQ(v bool) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldPublish, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldUpdatedAt, v))
}

// PublishedAtEQ applies the EQ predicate on the "published_at" field.
func PublishedAtEQ(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldEQ(FieldPublishedAt, v))
}

// PublishedAtNEQ applies the NEQ predicate on the "published_at" field.
func PublishedAtNEQ(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldNEQ(FieldPublishedAt, v))
}

// PublishedAtIn applies the In predicate on the "published_at" field.
func PublishedAtIn(vs ...time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldIn(FieldPublishedAt, vs...))
}

// PublishedAtNotIn applies the NotIn predicate on the "published_at" field.
func PublishedAtNotIn(vs ...time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldNotIn(FieldPublishedAt, vs...))
}

// PublishedAtGT applies the GT predicate on the "published_at" field.
func PublishedAtGT(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldGT(FieldPublishedAt, v))
}

// PublishedAtGTE applies the GTE predicate on the "published_at" field.
func PublishedAtGTE(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldGTE(FieldPublishedAt, v))
}

// PublishedAtLT applies the LT predicate on the "published_at" field.
func PublishedAtLT(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldLT(FieldPublishedAt, v))
}

// PublishedAtLTE applies the LTE predicate on the "published_at" field.
func PublishedAtLTE(v time.Time) predicate.Recreation {
	return predicate.Recreation(sql.FieldLTE(FieldPublishedAt, v))
}

// PublishedAtIsNil applies the IsNil predicate on the "published_at" field.
func PublishedAtIsNil() predicate.Recreation {
	return predicate.Recreation(sql.FieldIsNull(FieldPublishedAt))
}

// PublishedAtNotNil applies the NotNil predicate on the "published_at" field.
func PublishedAtNotNil() predicate.Recreation {
	return predicate.Recreation(sql.FieldNotNull(FieldPublishedAt))
}

// HasUsers applies the HasEdge predicate on the "users" edge.
func HasUsers() predicate.Recreation {
	return predicate.Recreation(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, UsersTable, UsersColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUsersWith applies the HasEdge predicate on the "users" edge with a given conditions (other predicates).
func HasUsersWith(preds ...predicate.User) predicate.Recreation {
	return predicate.Recreation(func(s *sql.Selector) {
		step := newUsersStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Recreation) predicate.Recreation {
	return predicate.Recreation(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Recreation) predicate.Recreation {
	return predicate.Recreation(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Recreation) predicate.Recreation {
	return predicate.Recreation(sql.NotPredicates(p))
}
